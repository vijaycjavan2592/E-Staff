<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Vijay-CH" ignored="6" name="Test" tests="70" failures="1" timestamp="18 Oct 2019 04:06:54 GMT" time="100.102" errors="0">
  <testcase name="@BeforeMethod setUp" time="16.874" classname="com.staff.qa.testcases.RequirementPageTest">
    <failure type="org.openqa.selenium.NoSuchElementException" message="no such element: Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;xpath&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;//div[@id=&amp;apos;hamburgerMenuIcon&amp;apos;]&amp;quot;}
  (Session info: chrome=77.0.3865.120)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;3.141.5&amp;apos;, revision: &amp;apos;d54ebd709a&amp;apos;, time: &amp;apos;2018-11-06T11:42:16&amp;apos;
System info: host: &amp;apos;VIJAY-CH&amp;apos;, ip: &amp;apos;10.20.8.248&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_152&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 76.0.3809.126 (d80a294506b4..., userDataDir: C:\Users\chavan_v\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:54277}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 573718d83d10cd6468df7e2d7dd00b99
*** Element info: {Using=xpath, value=//div[@id=&amp;apos;hamburgerMenuIcon&amp;apos;]}">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='hamburgerMenuIcon']"}
  (Session info: chrome=77.0.3865.120)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'VIJAY-CH', ip: '10.20.8.248', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 76.0.3809.126 (d80a294506b4..., userDataDir: C:\Users\chavan_v\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:54277}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 573718d83d10cd6468df7e2d7dd00b99
*** Element info: {Using=xpath, value=//div[@id='hamburgerMenuIcon']}
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at com.sun.proxy.$Proxy12.findElement(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy16.click(Unknown Source)
at com.staff.qa.pages.HomePage.clickOnRequirementOption(HomePage.java:65)
at com.staff.qa.testcases.RequirementPageTest.setUp(RequirementPageTest.java:44)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="26.908" classname="com.staff.qa.testcases.ConsultantPageTest">
    <failure type="org.openqa.selenium.NoSuchElementException" message="no such element: Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;xpath&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;//div[@id=&amp;apos;hamburgerMenuIcon&amp;apos;]&amp;quot;}
  (Session info: chrome=77.0.3865.120)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;3.141.5&amp;apos;, revision: &amp;apos;d54ebd709a&amp;apos;, time: &amp;apos;2018-11-06T11:42:16&amp;apos;
System info: host: &amp;apos;VIJAY-CH&amp;apos;, ip: &amp;apos;10.20.8.248&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_152&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 76.0.3809.126 (d80a294506b4..., userDataDir: C:\Users\chavan_v\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:54277}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 573718d83d10cd6468df7e2d7dd00b99
*** Element info: {Using=xpath, value=//div[@id=&amp;apos;hamburgerMenuIcon&amp;apos;]}">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='hamburgerMenuIcon']"}
  (Session info: chrome=77.0.3865.120)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'VIJAY-CH', ip: '10.20.8.248', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 77.0.3865.120, chrome: {chromedriverVersion: 76.0.3809.126 (d80a294506b4..., userDataDir: C:\Users\chavan_v\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:54277}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 573718d83d10cd6468df7e2d7dd00b99
*** Element info: {Using=xpath, value=//div[@id='hamburgerMenuIcon']}
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at com.sun.proxy.$Proxy12.findElement(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy16.click(Unknown Source)
at com.staff.qa.pages.HomePage.clickOnConsultantOption(HomePage.java:58)
at com.staff.qa.testcases.ConsultantPageTest.setUp(ConsultantPageTest.java:50)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.PlacementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterClass setupAfterSuite" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterClass setupAfterSuite -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterClass setupAfterSuite" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterClass setupAfterSuite -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterClass setupAfterSuite" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterClass setupAfterSuite -->
  <testcase name="@AfterTest endReport" time="0.0" classname="com.staff.qa.base.TestBase">
    <skipped/>
  </testcase> <!-- @AfterTest endReport -->
  <testcase name="loginPageTitleTest" time="0.019" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="loginTest" time="2.321" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="validateLoginFunctionalityForIncorrectUserNamePassword" time="2.396" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="validateMessageForBlankPasswordIncorrectUsername" time="2.311" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="validateMessageForBlankUsernamePassword" time="2.298" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="validatePasswordMessageForBlankPassword" time="2.297" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="validatePasswordMessageForIncorrectPassword" time="2.33" classname="com.staff.qa.testcases.LoginPageTest">
    <failure type="java.lang.AssertionError" message="null">
      <![CDATA[java.lang.AssertionError: null
at com.staff.qa.testcases.LoginPageTest.validatePasswordMessageForIncorrectPassword(LoginPageTest.java:210)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
... Removed 12 stack frames]]>
    </failure>
  </testcase> <!-- validatePasswordMessageForIncorrectPassword -->
  <testcase name="validateUsernameMessageForBalankUsername" time="2.305" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="validateUsernameMessageForIncorrectUsername" time="2.338" classname="com.staff.qa.testcases.LoginPageTest"/>
  <testcase name="verifyUserNavigateToConsultantPage" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUserNavigateToConsultantPage -->
  <testcase name="verifyUserNavigateToConsultantPage" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyUserNavigateToConsultantPage -->
  <testcase name="verifyAddNewConsulatantFormDisplayed" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyAddNewConsulatantFormDisplayed -->
  <testcase name="getOpenRequirementCount" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- getOpenRequirementCount -->
  <testcase name="getAllRequirementCount" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- getAllRequirementCount -->
  <testcase name="verifyAddNewConsultant" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyAddNewConsultant -->
  <testcase name="getArchivedRequirementCount" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- getArchivedRequirementCount -->
  <testcase name="verifyAddNewRequirementBtnClickable" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyAddNewRequirementBtnClickable -->
  <testcase name="verifyDuplicateConsultant" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyDuplicateConsultant -->
  <testcase name="verifyFunctionalityOfCancelButton" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyFunctionalityOfCancelButton -->
  <testcase name="verifyFunctionalityOfCancelButtonOfAddNewForm" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyFunctionalityOfCancelButtonOfAddNewForm -->
  <testcase name="getAvailableCount" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- getAvailableCount -->
  <testcase name="verifyAddRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyAddRequirementFunctionality -->
  <testcase name="getAllCount" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- getAllCount -->
  <testcase name="verifyEditRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyEditRequirementFunctionality -->
  <testcase name="getArchivedCount" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- getArchivedCount -->
  <testcase name="verifyUploadDocumentFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUploadDocumentFunctionality -->
  <testcase name="getQualifiedCount" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- getQualifiedCount -->
  <testcase name="verifyUploadDocumentAppearInGrid" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUploadDocumentAppearInGrid -->
  <testcase name="verifyBackedOutConsultantFunctionality" time="0.0" classname="com.staff.qa.testcases.PlacementPageTest">
    <skipped/>
  </testcase> <!-- verifyBackedOutConsultantFunctionality -->
  <testcase name="verifyDownloadUploadedDocument_requirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyDownloadUploadedDocument_requirement -->
  <testcase name="verifyEditConsultantFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyEditConsultantFunctionality -->
  <testcase name="verifyUploadDocumentFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyUploadDocumentFunctionality -->
  <testcase name="verifyCancelBtnFunOfUploadDocPopUp_requirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfUploadDocPopUp_requirement -->
  <testcase name="verifyUploadDocumentAppearInGrid" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyUploadDocumentAppearInGrid -->
  <testcase name="verifyEditJobDescriptionFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyEditJobDescriptionFunctionality -->
  <testcase name="verifyDownloadUploadedDocument" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyDownloadUploadedDocument -->
  <testcase name="verifyArchivedRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyArchivedRequirementFunctionality -->
  <testcase name="verifyUnArchivedRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUnArchivedRequirementFunctionality -->
  <testcase name="verifyLinkRequirementToConsultant" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyLinkRequirementToConsultant -->
  <testcase name="verifyValidationMessageForClosuredate" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationMessageForClosuredate -->
  <testcase name="verifyLinkRequirementToConsultant_alreadyExists" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyLinkRequirementToConsultant_alreadyExists -->
  <testcase name="verifyValidationMessageForClosureReason" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationMessageForClosureReason -->
  <testcase name="verifyDownloadResumeFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyDownloadResumeFunctionality -->
  <testcase name="verifyCancelFunctionalityOfLinkRequirement" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelFunctionalityOfLinkRequirement -->
  <testcase name="verifyCancelButtonFunctionalityOfArchiveRequirementPopUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelButtonFunctionalityOfArchiveRequirementPopUp -->
  <testcase name="verifyEmailFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyEmailFunctionality -->
  <testcase name="verifyValidationsForAddNewRequirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationsForAddNewRequirement -->
  <testcase name="verifyConsultantMapToRequirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyConsultantMapToRequirement -->
  <testcase name="verifyCancelButtonFunctionalityOfEmail" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelButtonFunctionalityOfEmail -->
  <testcase name="verifyValidationForEmailSubject" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationForEmailSubject -->
  <testcase name="verifyArchiveFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyArchiveFunctionality -->
  <testcase name="verifyConsultantMapToRequirement_alreadyExists" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyConsultantMapToRequirement_alreadyExists -->
  <testcase name="verifyUn_ArchiveFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyUn_ArchiveFunctionality -->
  <testcase name="verifyArchivedConsultantMapToRequirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyArchivedConsultantMapToRequirement -->
  <testcase name="verifyCancelBtnFunOfMapConsultantWindow" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfMapConsultantWindow -->
  <testcase name="verifyPageLable" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyPageLable -->
  <testcase name="verifyArchivedConsultantMapToRequirement" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyArchivedConsultantMapToRequirement -->
  <testcase name="verifyAddNoteFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyAddNoteFunctionality -->
  <testcase name="verifyAddNoteFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyAddNoteFunctionality -->
  <testcase name="verifyCancelBtnFunOfAddNote" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfAddNote -->
  <testcase name="verifyCancelBtnFunOfAddNote" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfAddNote -->
  <testcase name="verifyNavigateToStatusPopUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyNavigateToStatusPopUp -->
  <testcase name="verifySetTheStatusToConsultant" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifySetTheStatusToConsultant -->
  <testcase name="verifyNavigateToScheduleMeetingPopUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyNavigateToScheduleMeetingPopUp -->
  <testcase name="verifyScheduleMeetingFunctionality" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyScheduleMeetingFunctionality -->
  <testcase name="verifyCancelButtonFunOfSetStatusPopUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelButtonFunOfSetStatusPopUp -->
  <testcase name="verifyCancelBtnFunOfScheduleMeetingPopUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfScheduleMeetingPopUp -->
  <testcase name="verifyDeleteRecentStatusFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyDeleteRecentStatusFunctionality -->
  <testcase name="verifyValidationsInScheduleMeetingPopUp" time="0.0" classname="com.staff.qa.testcases.ConsultantPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationsInScheduleMeetingPopUp -->
  <testcase name="verifyViewResumeFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyViewResumeFunctionality -->
  <testcase name="@BeforeTest setExtentReport" time="0.0" classname="com.staff.qa.base.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeTest setExtentReport -->
  <testcase name="@BeforeTest setExtentReport" time="0.0" classname="com.staff.qa.base.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeTest setExtentReport -->
  <testcase name="@BeforeTest setExtentReport" time="0.0" classname="com.staff.qa.base.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeTest setExtentReport -->
  <testcase name="@AfterTest endReport" time="0.0" classname="com.staff.qa.base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterTest endReport -->
  <testcase name="@AfterTest endReport" time="0.0" classname="com.staff.qa.base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterTest endReport -->
  <testcase name="@AfterTest endReport" time="0.0" classname="com.staff.qa.base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterTest endReport -->
</testsuite> <!-- Test -->
