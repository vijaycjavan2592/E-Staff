<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="24490" started-at="2019-09-18T12:53:11Z" finished-at="2019-09-18T12:53:36Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="24490" started-at="2019-09-18T12:53:11Z" finished-at="2019-09-18T12:53:36Z">
      <class name="com.staff.qa.testcases.LoginPageTest">
        <test-method status="PASS" signature="setExtentReport()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="setExtentReport" is-config="true" duration-ms="172" started-at="2019-09-18T12:53:11Z" finished-at="2019-09-18T12:53:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="setupBeforeSuite(org.testng.ITestContext)[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="setupBeforeSuite" is-config="true" duration-ms="88" started-at="2019-09-18T12:53:11Z" finished-at="2019-09-18T12:53:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5a021cb9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBeforeSuite -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="setUp" is-config="true" duration-ms="5725" started-at="2019-09-18T12:53:11Z" finished-at="2019-09-18T12:53:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validateLoginFunctionality()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="validateLoginFunctionality" duration-ms="2502" started-at="2019-09-18T12:53:17Z" finished-at="2019-09-18T12:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginFunctionality -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="getResult" is-config="true" duration-ms="144" started-at="2019-09-18T12:53:20Z" finished-at="2019-09-18T12:53:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginFunctionality status=SUCCESS method=LoginPageTest.validateLoginFunctionality()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="setUp" is-config="true" duration-ms="4978" started-at="2019-09-18T12:53:20Z" finished-at="2019-09-18T12:53:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validatePasswordMessageForBlankPassword()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="validatePasswordMessageForBlankPassword" duration-ms="2375" started-at="2019-09-18T12:53:25Z" finished-at="2019-09-18T12:53:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePasswordMessageForBlankPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="getResult" is-config="true" duration-ms="105" started-at="2019-09-18T12:53:27Z" finished-at="2019-09-18T12:53:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordMessageForBlankPassword status=SUCCESS method=LoginPageTest.validatePasswordMessageForBlankPassword()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="setUp" is-config="true" duration-ms="5164" started-at="2019-09-18T12:53:27Z" finished-at="2019-09-18T12:53:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="validatePasswordMessageForIncorrectPassword()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="validatePasswordMessageForIncorrectPassword" duration-ms="2319" started-at="2019-09-18T12:53:32Z" finished-at="2019-09-18T12:53:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at com.staff.qa.testcases.LoginPageTest.validatePasswordMessageForIncorrectPassword(LoginPageTest.java:166)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePasswordMessageForIncorrectPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="getResult" is-config="true" duration-ms="467" started-at="2019-09-18T12:53:35Z" finished-at="2019-09-18T12:53:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordMessageForIncorrectPassword status=FAILURE method=LoginPageTest.validatePasswordMessageForIncorrectPassword()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setupAfterSuite()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="setupAfterSuite" is-config="true" duration-ms="69" started-at="2019-09-18T12:53:35Z" finished-at="2019-09-18T12:53:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAfterSuite -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@13deb50e]" name="endReport" is-config="true" duration-ms="363" started-at="2019-09-18T12:53:35Z" finished-at="2019-09-18T12:53:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.staff.qa.testcases.LoginPageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
