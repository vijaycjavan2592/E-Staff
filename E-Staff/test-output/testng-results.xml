<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="27" total="34" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Failed suite [E-Staff Test Automation Test Suite]" duration-ms="224996" started-at="2019-10-01T14:08:39Z" finished-at="2019-10-01T14:12:24Z">
    <groups>
    </groups>
    <test name="E-Staff App Test Cases(failed)" duration-ms="224996" started-at="2019-10-01T14:08:39Z" finished-at="2019-10-01T14:12:24Z">
      <class name="com.staff.qa.testcases.ConsultantPageTest">
        <test-method status="PASS" signature="setupBeforeSuite(org.testng.ITestContext)[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setupBeforeSuite" is-config="true" duration-ms="9" started-at="2019-10-01T14:08:49Z" finished-at="2019-10-01T14:08:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@39ffda4a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBeforeSuite -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setUp" is-config="true" duration-ms="6484" started-at="2019-10-01T14:08:49Z" finished-at="2019-10-01T14:08:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyDownloadResumeFunctionality()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="verifyDownloadResumeFunctionality" duration-ms="16425" started-at="2019-10-01T14:08:56Z" finished-at="2019-10-01T14:09:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDownloadResumeFunctionality -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="getResult" is-config="true" duration-ms="116" started-at="2019-10-01T14:09:12Z" finished-at="2019-10-01T14:09:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDownloadResumeFunctionality status=SUCCESS method=ConsultantPageTest.verifyDownloadResumeFunctionality()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setUp" is-config="true" duration-ms="6413" started-at="2019-10-01T14:09:12Z" finished-at="2019-10-01T14:09:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyAddNewConsultant(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="verifyAddNewConsultant" duration-ms="69288" started-at="2019-10-01T14:09:19Z" data-provider="getEStaffData" finished-at="2019-10-01T14:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Don]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DeCosta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[dondecoasta@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Hourly]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[2019]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Sep]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[28]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Immediately ]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Bay Area Or North]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Hourly W2]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[EMPLOYEE]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[H1B]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Australia]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[South Australia]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[Ashton]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[Java SQL]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[BackEnd]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[UI]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[2 Years of Experience]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at com.staff.qa.testcases.ConsultantPageTest.verifyAddNewConsultant(ConsultantPageTest.java:184)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddNewConsultant -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="getResult" is-config="true" duration-ms="455" started-at="2019-10-01T14:10:28Z" finished-at="2019-10-01T14:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddNewConsultant status=FAILURE method=ConsultantPageTest.verifyAddNewConsultant(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setUp" is-config="true" duration-ms="6782" started-at="2019-10-01T14:10:28Z" finished-at="2019-10-01T14:10:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyLinkRequirementToConsultant()[pri:3, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="verifyLinkRequirementToConsultant" duration-ms="25252" started-at="2019-10-01T14:10:35Z" finished-at="2019-10-01T14:11:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Requirements are linked successfully.] but found [Duplicate status can not be set as Shortlisted status already exists.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Requirements are linked successfully.] but found [Duplicate status can not be set as Shortlisted status already exists.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.staff.qa.testcases.ConsultantPageTest.verifyLinkRequirementToConsultant(ConsultantPageTest.java:671)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinkRequirementToConsultant -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="getResult" is-config="true" duration-ms="2485" started-at="2019-10-01T14:11:00Z" finished-at="2019-10-01T14:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLinkRequirementToConsultant status=FAILURE method=ConsultantPageTest.verifyLinkRequirementToConsultant()[pri:3, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setUp" is-config="true" duration-ms="7207" started-at="2019-10-01T14:11:03Z" finished-at="2019-10-01T14:11:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyLinkRequirementToConsultant_alreadyExists()[pri:4, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="verifyLinkRequirementToConsultant_alreadyExists" duration-ms="25323" started-at="2019-10-01T14:11:10Z" finished-at="2019-10-01T14:11:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinkRequirementToConsultant_alreadyExists -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="getResult" is-config="true" duration-ms="2133" started-at="2019-10-01T14:11:35Z" finished-at="2019-10-01T14:11:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLinkRequirementToConsultant_alreadyExists status=SUCCESS method=ConsultantPageTest.verifyLinkRequirementToConsultant_alreadyExists()[pri:4, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setUp" is-config="true" duration-ms="6433" started-at="2019-10-01T14:11:37Z" finished-at="2019-10-01T14:11:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyCancelFunctionalityOfLinkRequirement()[pri:5, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="verifyCancelFunctionalityOfLinkRequirement" duration-ms="24665" started-at="2019-10-01T14:11:44Z" finished-at="2019-10-01T14:12:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelFunctionalityOfLinkRequirement -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="getResult" is-config="true" duration-ms="163" started-at="2019-10-01T14:12:09Z" finished-at="2019-10-01T14:12:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelFunctionalityOfLinkRequirement status=SUCCESS method=ConsultantPageTest.verifyCancelFunctionalityOfLinkRequirement()[pri:5, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setUp" is-config="true" duration-ms="6465" started-at="2019-10-01T14:12:09Z" finished-at="2019-10-01T14:12:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyArchiveFunctionality()[pri:6, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="verifyArchiveFunctionality" duration-ms="8786" started-at="2019-10-01T14:12:15Z" finished-at="2019-10-01T14:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyArchiveFunctionality -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="getResult" is-config="true" duration-ms="179" started-at="2019-10-01T14:12:24Z" finished-at="2019-10-01T14:12:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyArchiveFunctionality status=SUCCESS method=ConsultantPageTest.verifyArchiveFunctionality()[pri:6, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setupAfterSuite()[pri:0, instance:com.staff.qa.testcases.ConsultantPageTest@271053e1]" name="setupAfterSuite" is-config="true" duration-ms="51" started-at="2019-10-01T14:12:24Z" finished-at="2019-10-01T14:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAfterSuite -->
      </class> <!-- com.staff.qa.testcases.ConsultantPageTest -->
      <class name="com.staff.qa.testcases.LoginPageTest">
        <test-method status="PASS" signature="setExtentReport(org.testng.ITestContext)[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008]" name="setExtentReport" is-config="true" duration-ms="189" started-at="2019-10-01T14:08:39Z" finished-at="2019-10-01T14:08:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@39ffda4a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtentReport -->
        <test-method status="PASS" signature="setupBeforeSuite(org.testng.ITestContext)[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008]" name="setupBeforeSuite" is-config="true" duration-ms="258" started-at="2019-10-01T14:08:40Z" finished-at="2019-10-01T14:08:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@39ffda4a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBeforeSuite -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008]" name="setUp" is-config="true" duration-ms="6359" started-at="2019-10-01T14:08:40Z" finished-at="2019-10-01T14:08:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="validatePasswordMessageForIncorrectPassword()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008]" name="validatePasswordMessageForIncorrectPassword" duration-ms="2397" started-at="2019-10-01T14:08:46Z" finished-at="2019-10-01T14:08:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at com.staff.qa.testcases.LoginPageTest.validatePasswordMessageForIncorrectPassword(LoginPageTest.java:210)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePasswordMessageForIncorrectPassword -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008]" name="getResult" is-config="true" duration-ms="399" started-at="2019-10-01T14:08:49Z" finished-at="2019-10-01T14:08:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordMessageForIncorrectPassword status=FAILURE method=LoginPageTest.validatePasswordMessageForIncorrectPassword()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="setupAfterSuite()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008]" name="setupAfterSuite" is-config="true" duration-ms="2" started-at="2019-10-01T14:08:49Z" finished-at="2019-10-01T14:08:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAfterSuite -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.staff.qa.testcases.LoginPageTest@4f7d0008]" name="endReport" is-config="true" duration-ms="230" started-at="2019-10-01T14:12:24Z" finished-at="2019-10-01T14:12:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.staff.qa.testcases.LoginPageTest -->
    </test> <!-- E-Staff App Test Cases(failed) -->
  </suite> <!-- Failed suite [E-Staff Test Automation Test Suite] -->
</testng-results>
