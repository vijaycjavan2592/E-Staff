<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Vijay-CH" ignored="0" name="Default test" tests="1" failures="0" timestamp="06 Dec 2019 06:28:10 GMT" time="0.264" errors="0">
  <testcase name="@BeforeClass setupBeforeSuite" time="0.0" classname="com.staff.qa.base.BaseClass">
    <failure type="java.io.FileNotFoundException" message="D:Personal DocsEclipseNew folderE-Staffsrcmainjavacomstaffqa	estdata\TCResult_ExcelSheet.xls (The filename, directory name, or volume label syntax is incorrect)">
      <![CDATA[java.io.FileNotFoundException: D:Personal DocsEclipseNew folderE-Staffsrcmainjavacomstaffqaestdata\TCResult_ExcelSheet.xls (The filename, directory name, or volume label syntax is incorrect)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:195)
at java.io.FileInputStream.<init>(FileInputStream.java:138)
at java.io.FileInputStream.<init>(FileInputStream.java:93)
at com.staff.qa.base.BaseClass.setupBeforeSuite(BaseClass.java:191)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass setupBeforeSuite -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.CompaniesPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterClass setupAfterSuite" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterClass setupAfterSuite -->
  <testcase name="@AfterTest endReport" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterTest endReport -->
  <testcase name="CompaniesPageURLTest" time="0.0" classname="com.staff.qa.testcases.CompaniesPageTest">
    <skipped/>
  </testcase> <!-- CompaniesPageURLTest -->
</testsuite> <!-- Default test -->
