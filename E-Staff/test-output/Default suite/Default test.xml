<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Vijay-CH" ignored="0" name="Default test" tests="33" failures="0" timestamp="20 Dec 2019 07:15:57 GMT" time="39.39" errors="0">
  <testcase name="@BeforeMethod setUp" time="4.62" classname="com.staff.qa.testcases.RequirementPageTest">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=78.0.3904.108)
Build info: version: &amp;apos;3.141.5&amp;apos;, revision: &amp;apos;d54ebd709a&amp;apos;, time: &amp;apos;2018-11-06T11:42:16&amp;apos;
System info: host: &amp;apos;VIJAY-CH&amp;apos;, ip: &amp;apos;10.20.8.248&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_152&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\chavan_v\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64980}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9d81d6f3ed58483affa7dacf60c25901
*** Element info: {Using=name, value=username}">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=78.0.3904.108)
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'VIJAY-CH', ip: '10.20.8.248', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_152'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\chavan_v\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64980}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9d81d6f3ed58483affa7dacf60c25901
*** Element info: {Using=name, value=username}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:404)
at org.openqa.selenium.By$ByName.findElement(By.java:284)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:105)
at com.sun.proxy.$Proxy12.findElement(Unknown Source)
at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:194)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy16.sendKeys(Unknown Source)
at com.staff.qa.pages.LoginPage.login(LoginPage.java:49)
at com.staff.qa.testcases.RequirementPageTest.setUp(RequirementPageTest.java:56)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@BeforeMethod setUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterClass setupAfterSuite" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterClass setupAfterSuite -->
  <testcase name="@AfterTest endReport" time="0.0" classname="com.staff.qa.base.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterTest endReport -->
  <testcase name="verifyCoutOfConsultantAfterAIapplied" time="24.546" classname="com.staff.qa.testcases.RequirementPageTest"/>
  <testcase name="verifyRelevanceAIapplied" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyRelevanceAIapplied -->
  <testcase name="verifyShortlistConsultantFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyShortlistConsultantFunctionality -->
  <testcase name="verifyUserNavigateToRequirementPage" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUserNavigateToRequirementPage -->
  <testcase name="getOpenRequirementCount" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- getOpenRequirementCount -->
  <testcase name="getAllRequirementCount" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- getAllRequirementCount -->
  <testcase name="getArchivedRequirementCount" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- getArchivedRequirementCount -->
  <testcase name="verifyAddNewRequirementBtnClickable" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyAddNewRequirementBtnClickable -->
  <testcase name="verifyFunctionalityOfCancelButtonOfAddNewForm" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyFunctionalityOfCancelButtonOfAddNewForm -->
  <testcase name="verifyAddRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyAddRequirementFunctionality -->
  <testcase name="verifyEditRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyEditRequirementFunctionality -->
  <testcase name="verifyUploadDocumentFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUploadDocumentFunctionality -->
  <testcase name="verifyUploadDocumentAppearInGrid" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUploadDocumentAppearInGrid -->
  <testcase name="verifyDownloadUploadedDocument_requirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyDownloadUploadedDocument_requirement -->
  <testcase name="verifyCancelBtnFunOfUploadDocPopUp_requirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfUploadDocPopUp_requirement -->
  <testcase name="verifyEditJobDescriptionFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyEditJobDescriptionFunctionality -->
  <testcase name="verifyArchivedRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyArchivedRequirementFunctionality -->
  <testcase name="verifyUnArchivedRequirementFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyUnArchivedRequirementFunctionality -->
  <testcase name="verifyValidationMessageForClosuredate" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationMessageForClosuredate -->
  <testcase name="verifyValidationMessageForClosureReason" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationMessageForClosureReason -->
  <testcase name="verifyCancelButtonFunctionalityOfArchiveRequirementPopUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelButtonFunctionalityOfArchiveRequirementPopUp -->
  <testcase name="verifyValidationsForAddNewRequirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyValidationsForAddNewRequirement -->
  <testcase name="verifyConsultantMapToRequirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyConsultantMapToRequirement -->
  <testcase name="verifyConsultantMapToRequirement_alreadyExists" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyConsultantMapToRequirement_alreadyExists -->
  <testcase name="verifyArchivedConsultantMapToRequirement" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyArchivedConsultantMapToRequirement -->
  <testcase name="verifyCancelBtnFunOfMapConsultantWindow" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfMapConsultantWindow -->
  <testcase name="verifyAddNoteFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyAddNoteFunctionality -->
  <testcase name="verifyCancelBtnFunOfAddNote" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelBtnFunOfAddNote -->
  <testcase name="verifyNavigateToStatusPopUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyNavigateToStatusPopUp -->
  <testcase name="verifySetTheStatusToConsultant" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifySetTheStatusToConsultant -->
  <testcase name="verifyCancelButtonFunOfSetStatusPopUp" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyCancelButtonFunOfSetStatusPopUp -->
  <testcase name="verifyDeleteRecentStatusFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyDeleteRecentStatusFunctionality -->
  <testcase name="verifyViewResumeFunctionality" time="0.0" classname="com.staff.qa.testcases.RequirementPageTest">
    <skipped/>
  </testcase> <!-- verifyViewResumeFunctionality -->
</testsuite> <!-- Default test -->
